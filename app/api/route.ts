import Groq from "groq-sdk";
import { headers } from "next/headers";
import { z } from "zod";
import { zfd } from "zod-form-data";
import { unstable_after as after } from "next/server";

const groq = new Groq();

const schema = zfd.formData({
	input: z.union([zfd.text(), zfd.file()]),
	message: zfd.repeatableOfType(
		zfd.json(
			z.object({
				role: z.enum(["user", "assistant"]),
				content: z.string(),
			})
		)
	),
});

export async function POST(request: Request) {
	console.time("transcribe " + request.headers.get("x-vercel-id") || "local");

	const { data, success } = schema.safeParse(await request.formData());
	if (!success) return new Response("Invalid request", { status: 400 });

	const transcript = await getTranscript(data.input);
	if (!transcript) return new Response("Invalid audio", { status: 400 });

	console.timeEnd(
		"transcribe " + request.headers.get("x-vercel-id") || "local"
	);
	console.time(
		"text completion " + request.headers.get("x-vercel-id") || "local"
	);

	const completion = await groq.chat.completions.create({
		model: "llama3-8b-8192",
		messages: [
			{
				role: "system",
				content: `<instructions>
				You are an friend of a 5-8 years old child who named Roen, And Your name is Ainia. Your task is to guide the child to create a children's picture book with you through multiple rounds of dialogue.
				Let's complete step by step:
				1. Start the conversation:Upon receiving the start command, introduce yourself and greet the children in a friendly manner, introduce yourself and greet with children and asking if they are ready to start creating an interesting story. in the form of small talke with friendly manner.
				2. Choose a theme::Guide children to choose a theme that interests them and encourage them to use their imagination to choose.
				3. Generating story:Based on the child's description, we will start generating the first chapter of the story.the story must be contain educational content such as scientific knowledge or arithmetic knowledge
				4. Get Story feedback:We will use small games to interact with children and determine the next chapter content, such as word puzzles, arithmetic games, etc
				judgement:
				4.1.If the children like it,we will continue to generate next chapter of the story based on the previous context,generate only one chapter at a time.
				4.2.If the children don't like it, we will rewrite this chapter.
				5. End Story :After the story is generated, tell the children that we have successfully collaborated to create a story together. Summarize the knowledge of the story,and encourage the children to create a story together next time.
				</instructions>

				<require>
				1. Ensure that the output does not contain any XML tags.
				2. Ensure that the input content is brief and easy for children to understand.
				3. Ensure that the generated content should preferably include some small knowledge suitable for children, such as daily life tips
				4. Ensure that the generated content of children's picture books usually ranges from 1000 to 4000 words. If you determine that the content exceeds the word limit, you can enter the End Story process
				5. Do not copy the content of the examples. The story theme is not only about animals, space exploration, or magical worlds, but can be generated by yourself
				6. The generated content should be distinguished from regular voiceovers
				- User location is ${location()}.
				- The current time is ${time()}.
				</require>

				<examples>
				<example>
				<user_input>start</user_input>
				<user_output>Hi Cute Roen, my name is Ainia. How about these day? are you ready to create a story together?</ user_output>
				</example>

				<example>
				<user_input>Hi Ainia,i am fine,yes i am ready,i would like create a story about space adventure</user_input>
				<user_output>Yay! Adventures are so much fun! We can create an exciting adventure story together,Now, letâ€™s think about who our main character will be. Do you want our hero to be a brave animal, like a clever fox or a curious rabbit? Or maybe a human character, like a young explorer? You can choose anyone you like! Who do you want our main character to be?</user_output>
				</example>

				<example>
				<user_input>human</user_input>
				<user_output>
				Awesome! Our brave young explorer is named Xiaole!
				Chapter 1: Space adventure sets sail
				Xiaole and Xiaoyou secretly entered their grandfather's mini spaceship hidden in the warehouse without telling their family. Curiously strolling around, Xiaoyou noticed stars twinkling outside the window. Xiaole explained, "This is a physical phenomenon. Light passes through the atmosphere, and at the same time, the atmosphere is moving, causing the direction of light refraction to be different, so the stars appear to flicker." As she spoke, she noticed that the spaceship display screen showed "1, 3, 5, 7, (), 11, please fill in the password". What would you fill in?
				What do you think of the first chapter, Roen? Do you like it?If you like this story, please fill in your password
				</ user_output>
				</example>`,
			},
			...data.message,
			{
				role: "user",
				content: transcript,
			},
		],
	});

	const response = completion.choices[0].message.content;
	console.timeEnd(
		"text completion " + request.headers.get("x-vercel-id") || "local"
	);

	console.time(
		"cartesia request " + request.headers.get("x-vercel-id") || "local"
	);

	const voice = await fetch("https://api.cartesia.ai/tts/bytes", {
		method: "POST",
		headers: {
			"Cartesia-Version": "2024-06-30",
			"Content-Type": "application/json",
			"X-API-Key": process.env.CARTESIA_API_KEY!,
		},
		body: JSON.stringify({
			model_id: "sonic-english",
			transcript: response,
			voice: {
				mode: "id",
				id: "694f9389-aac1-45b6-b726-9d9369183238",
				__experimental_controls: {
					speed: "slow",
					emotion: ["positivity:high","curiosity:highest"]
				}
			},
			output_format: {
				container: "raw",
				encoding: "pcm_f32le",
				sample_rate: 24000,
			},
		}),
	});

	console.timeEnd(
		"cartesia request " + request.headers.get("x-vercel-id") || "local"
	);

	if (!voice.ok) {
		console.error(await voice.text());
		return new Response("Voice synthesis failed", { status: 500 });
	}

	console.time("stream " + request.headers.get("x-vercel-id") || "local");
	after(() => {
		console.timeEnd(
			"stream " + request.headers.get("x-vercel-id") || "local"
		);
	});

	return new Response(voice.body, {
		headers: {
			"X-Transcript": encodeURIComponent(transcript),
			"X-Response": encodeURIComponent(response),
		},
	});
}

function location() {
	const headersList = headers();

	const country = headersList.get("x-vercel-ip-country");
	const region = headersList.get("x-vercel-ip-country-region");
	const city = headersList.get("x-vercel-ip-city");

	if (!country || !region || !city) return "unknown";

	return `${city}, ${region}, ${country}`;
}

function time() {
	return new Date().toLocaleString("en-US", {
		timeZone: headers().get("x-vercel-ip-timezone") || undefined,
	});
}

async function getTranscript(input: string | File) {
	if (typeof input === "string") return input;

	try {
		const { text } = await groq.audio.transcriptions.create({
			file: input,
			model: "whisper-large-v3",
		});

		return text.trim() || null;
	} catch {
		return null; // Empty audio file
	}
}